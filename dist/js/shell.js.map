{"version":3,"sources":["index.js","editor/domains/domains.js","editor/pages/pages.js","editor/bindings/bindings.js","editor/schemes/schemes.js","editor/settings/settings.js","shell/actions/actions.js","editor/params/params.js","editor/storages/storages.js","shell/brand/brand.js","shell/container/container.js","shell/domains/domains.js","shell/decorator/decorator.js","shell/categories/categories.js","shell/loader/loader.js","shell/page/page.js","shell/palette/palette.js","shell/pages/pages.js","shell/shell/shell.js","shell/target/target.js","shell/sources/sources.js","shell/widget/widget.js","shell/storages/storages.js","editor/pages/sources/sources.js","editor/pages/widgets/widgets.js"],"names":["window","Shell","$","Vue","Core","Widgets","Pages","jQuery","ListViewer","component","template","mixins","ListViewerMixin","ModalEditor","ModalEditorMixin","TabsMixin","SettingsListViewer","EditorMixin","SettingsModalEditor","created","items","i","this","context","widget","props","length","prop","param","current","root","params","name","item","push","data","methods","hasProps","tab","setStrategy","strategy","$set","getStrategy","$get","binding","ActionMixin","globals","Object","_this","ajax","url","method","dataType","JSON","stringify","model","contentType","done","d","assign","pull","_this2","trigger","event","$dispatch","ParamString","id","String","ParamRich","ParamSource","ParamMultiple","ParamMultipleListViewer","owner","Array","getLabel","display","vm","$interpolate","ParamBindingsModalEditor","value","_action","ParamMultipleModalEditor","components","params-string","params-rich","params-source","params-multiple","StoragesListViewer","StoragesModalEditor","check","console","log","StoragesVariablesListViewer","StoragesVariablesModalEditor","settings","page","domains","runtime","service","evaluate","self","b","v","expression","$eval","e","evaluateParams","n","r","variable","type","vv","res","array","result","isArray","j","parse","$data","index","vi","DecoratorMixin","removeWidget","doApply","showSettings","original","submit","$remove","$destroy","reset","$mount","$appendTo","get","BindingsMixin","bindings","_this3","$watch","deep","immediate","storage","CompositeMixin","children","_this4","placeholder","events","removeChildWidget","slice","SortableMixin","selector","selected","attached","$route","private","selectTarget","unselectTarget","stack","editable","Boolean","dragged","sortable","$el","vertical","drop","containerSelector","itemSelector","excludeSelector","verticalClass","horizontalClass","onDragStart","_super","$container","closest","__vue__","vue","$originalItem","find","indexOf","onDrop","location","$item","newStack","newIndex","before","w","newItem","splice","oldStack","oldIndex","oldItem","remove","categories","Loader","portal","_this5","then","decorator","_this6","storages","st","variables","sources","deferred","doRequest","when","apply","arguments","bind","s","query","in","specified","PaletteItem","category","group","palette-item","Palette","pages","_this7","create","update","selection","source","ShellPublic","ShellPrivate","relevant","collection","c","_this8","scale","domain","zoomIn","css","perfectScrollbar","zoomOut","_this9","_this10","selectCategory","selectDomain","selectPage","selectSource","selectStorage","Widget","init","decorators","alternatives","default-stack-horizontal","default-stack-vertical","default-stub","fallback","palette","tag","SourcesListViewer","SourcesModalEditor","SourcesParamsListViewer","SourcesParamsModalEditor"],"mappings":"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","file":"shell.js","sourcesContent":["window.Shell =\r\n(function($, Vue, Core) {\r\n\r\n    var Shell = {\r\n        Widgets: {},\r\n        Pages: {},\r\n    };\r\n\r\n    return Shell;\r\n\r\n})(jQuery, Vue, Core);\r\n","(function(Vue, $, Core, Shell) {\r\n\r\n    var ListViewer =\r\n    Vue.component('domains-list', {\r\n        template: '#domains-list',\r\n        mixins: [Core.ListViewerMixin],\r\n    });\r\n\r\n    var ModalEditor =\r\n    Vue.component('domains-dialog', {\r\n        template: '#domains-dialog',\r\n        mixins: [Core.ModalEditorMixin, Core.TabsMixin('main')],\r\n    });\r\n\r\n    var Editor =\r\n    Vue.component('domains', {\r\n        mixins: [Core.EditorMixin(ListViewer, ModalEditor)],\r\n        template: '#domains',\r\n    });\r\n\r\n\r\n    var SettingsListViewer =\r\n    Vue.component('domains-settings-list', {\r\n        template: '#domains-settings-list',\r\n        mixins: [Core.ListViewerMixin],\r\n    });\r\n\r\n    var SettingsModalEditor =\r\n    Vue.component('domains-settings-dialog', {\r\n        template: '#domains-settings-dialog',\r\n        mixins: [Core.ModalEditorMixin],\r\n    });\r\n\r\n    var SettingsEditor =\r\n    Vue.component('domains-settings', {\r\n        mixins: [Core.EditorMixin(SettingsListViewer, SettingsModalEditor)],\r\n        template: '#domains-settings',\r\n    });\r\n\r\n})(Vue, jQuery, Core, Shell);\r\n","(function($, Vue, Core, Shell) {\r\n\r\n    var PagesModalEditor = Shell.Pages.ModalEditor =\r\n    Vue.component('shell-pages-dialog', {\r\n        template: '#shell-pages-dialog',\r\n        mixins: [ Core.ModalEditorMixin, Core.TabsMixin('main') ],\r\n        created: function() {\r\n\r\n            var items = [];\r\n\r\n            for (var i = 0; i < this.context.widget.props.length; i++) {\r\n\r\n                var prop = this.context.widget.props[i];\r\n                var param = this.current.root.params[prop.name];\r\n\r\n                var item = {\r\n                    prop: prop,\r\n                    param: param,\r\n                };\r\n\r\n                items.push(item);\r\n            }\r\n\r\n            this.items = items;\r\n        },\r\n        data: function() {\r\n            return {\r\n                context: this.context,\r\n                items: this.items,\r\n            };\r\n        },\r\n        methods: {\r\n\r\n            hasProps: function(tab) {\r\n                if (this.context.widget && this.context.widget.props) {\r\n                    for (var i = 0; i < this.context.widget.props.length; i++) {\r\n                        var prop = this.context.widget.props[i];\r\n                        if (prop.tab == tab) return true;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        },\r\n    });\r\n\r\n})(jQuery, Vue, Core, Shell);\r\n","(function(Vue, $, Core, Shell) {\r\n\r\n    var ModalEditor =\r\n    Vue.component('bindings-dialog', {\r\n        template: '#bindings-dialog',\r\n        mixins: [Core.ModalEditorMixin],\r\n        methods: {\r\n            setStrategy: function(strategy) {\r\n                this.$set('current.binding.strategy', strategy);\r\n            },\r\n            getStrategy: function(strategy) {\r\n                return this.$get('current.binding.strategy');\r\n            },\r\n        },\r\n        created: function() {\r\n            if (!this.current.binding) this.current.binding = {};\r\n        },\r\n    });\r\n\r\n    var Editor =\r\n    Vue.component('bindings', {\r\n\r\n        mixins: [Core.ActionMixin(ModalEditor)],\r\n    });\r\n\r\n})(Vue, jQuery, Core, Shell);\r\n","(function(Vue, $, Core, Shell) {\r\n\r\n    var ListViewer =\r\n    Vue.component('schemes-list', {\r\n        template: '#schemes-list',\r\n        mixins: [Core.ListViewerMixin],\r\n    });\r\n\r\n    var ModalEditor =\r\n    Vue.component('schemes-dialog', {\r\n        template: '#schemes-dialog',\r\n        mixins: [Core.ModalEditorMixin, Core.TabsMixin('main')],\r\n    });\r\n\r\n    var Editor =\r\n    Vue.component('schemes', {\r\n        mixins: [Core.EditorMixin(ListViewer, ModalEditor)],\r\n        template: '#schemes',\r\n    });\r\n\r\n\r\n    var SettingsListViewer =\r\n    Vue.component('schemes-settings-list', {\r\n        template: '#schemes-settings-list',\r\n        mixins: [Core.ListViewerMixin],\r\n    });\r\n\r\n    var SettingsModalEditor =\r\n    Vue.component('schemes-settings-dialog', {\r\n        template: '#schemes-settings-dialog',\r\n        mixins: [Core.ModalEditorMixin],\r\n    });\r\n\r\n    var SettingsEditor =\r\n    Vue.component('schemes-settings', {\r\n        mixins: [Core.EditorMixin(SettingsListViewer, SettingsModalEditor)],\r\n        template: '#schemes-settings',\r\n    });\r\n\r\n})(Vue, jQuery, Core, Shell);\r\n","(function(Vue, $, Core, Shell) {\r\n\r\n    var ModalEditor =\r\n    Vue.component('settings-dialog', {\r\n        template: '#settings-dialog',\r\n        mixins: [Core.ModalEditorMixin, Core.TabsMixin('domains')],\r\n    });\r\n\r\n    var Editor =\r\n    Vue.component('settings', {\r\n        mixins: [Core.ActionMixin(ModalEditor)],\r\n        props: {\r\n            globals: Object\r\n        },\r\n        methods: {\r\n            push: function() {\r\n                $.ajax({\r\n                    url: '/settings/do-update',\r\n                    method: 'POST',\r\n                    dataType: \"json\",\r\n                    data: JSON.stringify(this.model),\r\n                    contentType: \"application/json\",\r\n                })\r\n                .done((d) => {\r\n                    Object.assign(this.model, d);\r\n                })\r\n            },\r\n            pull: function() {\r\n                $.ajax({\r\n                    url: '/settings',\r\n                    method: 'GET',\r\n                    dataType: \"json\"\r\n                })\r\n                .done((d) => {\r\n                    Object.assign(this.model, d);\r\n                })\r\n            }\r\n        }\r\n    });\r\n\r\n})(Vue, jQuery, Core, Shell);\r\n","(function($, Vue, Core, Shell) {\r\n\r\n    Vue.component('shell-actions', {\r\n        template: '#shell-actions',\r\n        props: {\r\n            model: Object,\r\n            globals: Object,\r\n            // category: Object,\r\n            // domain: Object,\r\n            // page: Object\r\n        },\r\n        methods: {\r\n            trigger: function(event, item, context) {\r\n                this.$dispatch(event, { item: item, context: context });\r\n            },\r\n        }\r\n    });\r\n\r\n})(jQuery, Vue, Core, Shell);\r\n","(function(Vue, $, Core, Shell) {\r\n\r\n    var ParamVariable =\r\n    Vue.component('params-variable', {\r\n        template: '#params-variable',\r\n        props: {\r\n            id: String,\r\n            item: Object,\r\n            globals: Object,\r\n        }\r\n    });\r\n\r\n    var ParamString =\r\n    Vue.component('params-string', {\r\n        template: '#params-string',\r\n        props: {\r\n            id: String,\r\n            item: Object,\r\n            globals: Object,\r\n        }\r\n    });\r\n\r\n    var ParamSelect =\r\n    Vue.component('params-select', {\r\n        template: '#params-select',\r\n        props: {\r\n            id: String,\r\n            item: Object,\r\n            globals: Object,\r\n        }\r\n    });\r\n\r\n    var ParamRich =\r\n    Vue.component('params-rich', {\r\n        template: '#params-rich',\r\n        props: {\r\n            id: String,\r\n            item: Object,\r\n            globals: Object,\r\n        }\r\n    });\r\n\r\n    var ParamSource =\r\n    Vue.component('params-source', {\r\n        template: '#params-source',\r\n        props: {\r\n            id: String,\r\n            item: Object,\r\n            globals: Object,\r\n        }\r\n    });\r\n\r\n    var ParamMultiple =\r\n    Vue.component('params-multiple', {\r\n        template: '#params-multiple',\r\n        props: {\r\n            id: String,\r\n            item: Object,\r\n            globals: Object,\r\n        },\r\n        data: function() {\r\n            return {\r\n                items: this.item.items\r\n            }\r\n        },\r\n    });\r\n\r\n    var ParamObject =\r\n    Vue.component('params-object', {\r\n        template: '#params-object',\r\n        props: {\r\n            id: String,\r\n            item: Object,\r\n            globals: Object,\r\n        },\r\n    });\r\n\r\n    var Params =\r\n    Vue.component('params', {\r\n        template: '#params',\r\n        props: {\r\n            owner: Object,\r\n            tab: String,\r\n            items: Array,\r\n            globals: Object\r\n        }\r\n    });\r\n\r\n\r\n    var ParamMultipleListViewer =\r\n    Vue.component('params-multiple-list', {\r\n        template: '#params-multiple-list',\r\n        mixins: [Core.ListViewerMixin],\r\n        props: {\r\n            prop: Object,\r\n            param: Object,\r\n        },\r\n        methods: {\r\n            getLabel: function(item) {\r\n\r\n                if (this.prop.display) {\r\n                    var vm = new Vue({\r\n                        item: item,\r\n                    });\r\n                    return vm.$interpolate(this.prop.display);\r\n                }\r\n                return '<item>';\r\n            },\r\n        }\r\n    });\r\n\r\n    var ParamBindingsModalEditor =\r\n    Vue.component('params-bindings-dialog', {\r\n        template: '#params-bindings-dialog',\r\n        mixins: [ Core.ModalEditorMixin, Core.TabsMixin('binding') ],\r\n        data: function() {\r\n            return {\r\n                items: this.items,\r\n            };\r\n        },\r\n        created: function() {\r\n\r\n            var items = [];\r\n\r\n            var binding = this.current.binding || {};\r\n            if (!binding.strategy) binding.strategy = 'interpolate';\r\n\r\n            binding.params = binding.params || {};\r\n\r\n            if (this.context.prop.props) {\r\n\r\n                for (var i = 0; i < this.context.prop.props.length; i++) {\r\n\r\n                    var prop = this.context.prop.props[i];\r\n                    var param = this.current.value[prop.name] = this.current.value[prop.name] || {};\r\n\r\n                    param._action = param._action == 'update'\r\n                        ? 'update'\r\n                        : 'create'\r\n                    ;\r\n\r\n                    var item = {\r\n                        prop: prop,\r\n                        param: param,\r\n                    };\r\n\r\n                    items.push(item);\r\n                }\r\n            }\r\n\r\n            this.$set('current.binding', binding);\r\n            this.$set('items', items);\r\n        },\r\n        methods: {\r\n            setStrategy: function(strategy) {\r\n                this.$set('current.binding.strategy', strategy);\r\n            },\r\n            getStrategy: function(strategy) {\r\n                return this.$get('current.binding.strategy');\r\n            },\r\n        },\r\n    });\r\n\r\n    var Editor =\r\n    Vue.component('params-bindings', {\r\n        mixins: [Core.ActionMixin(ParamBindingsModalEditor)],\r\n    });\r\n\r\n    var ParamMultipleModalEditor =\r\n    Vue.component('params-multiple-dialog', {\r\n        template: '#params-multiple-dialog',\r\n        mixins: [Core.ModalEditorMixin, Core.TabsMixin('data')],\r\n        data: function() {\r\n            return {\r\n                items: this.items,\r\n            };\r\n        },\r\n        created: function() {\r\n\r\n            var items = [];\r\n\r\n            // console.log('created', ParamMultipleModalEditor);\r\n\r\n            // console.log(this.context.prop);\r\n\r\n            for (var i = 0; i < this.context.prop.props.length; i++) {\r\n\r\n                var prop = this.context.prop.props[i];\r\n                var param = this.current[prop.name] = this.current[prop.name] || { value: null };\r\n\r\n                param._action = param._action == 'update'\r\n                    ? 'update'\r\n                    : 'create'\r\n                ;\r\n\r\n                var item = {\r\n                    prop: prop,\r\n                    param: param,\r\n                };\r\n\r\n                // console.log(item);\r\n\r\n                items.push(item);\r\n            }\r\n\r\n            this.$set('items', items);\r\n        },\r\n    });\r\n\r\n    var ParamMultipleEditor =\r\n    Vue.component('params-multiple-editor', {\r\n        mixins: [Core.EditorMixin(ParamMultipleListViewer, ParamMultipleModalEditor)],\r\n        template: '#params-multiple-editor',\r\n        props: {\r\n            prop: Object,\r\n            param: Object,\r\n            items: Array,\r\n        },\r\n    });\r\n\r\n\r\n    var ParamsList =\r\n    Vue.component('params-list', {\r\n        template: '#params-list',\r\n        components: {\r\n            'params-string': ParamString,\r\n            'params-rich': ParamRich,\r\n            'params-source': ParamSource,\r\n            'params-multiple': ParamMultiple,\r\n        },\r\n        props: {\r\n            owner: Object,\r\n            tab: String,\r\n            items: Array,\r\n            globals: Object\r\n        }\r\n    });\r\n\r\n})(Vue, jQuery, Core, Shell);\r\n","(function(Vue, $, Core, Shell) {\r\n\r\n    var StoragesListViewer =\r\n    Vue.component('storages-list', {\r\n        template: '#storages-list',\r\n        mixins: [Core.ListViewerMixin],\r\n    });\r\n\r\n    var StoragesModalEditor =\r\n    Vue.component('storages-dialog', {\r\n        template: '#storages-dialog',\r\n        mixins: [Core.ModalEditorMixin],\r\n        methods: {\r\n            check: function() {\r\n                console.log('check');\r\n            }\r\n        }\r\n    });\r\n\r\n    var StoragesEditor =\r\n    Vue.component('storages', {\r\n        mixins: [Core.EditorMixin(StoragesListViewer, StoragesModalEditor)],\r\n        template: '#storages',\r\n    });\r\n\r\n    var StoragesVariablesListViewer =\r\n    Vue.component('storages-variables-list', {\r\n        template: '#storages-variables-list',\r\n        mixins: [Core.ListViewerMixin],\r\n    });\r\n\r\n    var StoragesVariablesModalEditor =\r\n    Vue.component('storages-variables-dialog', {\r\n        template: '#storages-variables-dialog',\r\n        mixins: [Core.ModalEditorMixin],\r\n    });\r\n\r\n    var StoragesVariablesEditor =\r\n    Vue.component('storages-variables', {\r\n        mixins: [Core.EditorMixin(StoragesVariablesListViewer, StoragesVariablesModalEditor)],\r\n        template: '#storages-variables',\r\n    });\r\n\r\n})(Vue, jQuery, Core, Shell);\r\n","(function($, Vue, Core, Shell) {\r\n\r\n    Vue.component('shell-brand', {\r\n        template: '#shell-brand',\r\n    });\r\n\r\n})(jQuery, Vue, Core, Shell);\r\n","(function($, Vue, Core, Shell) {\r\n\r\n    Vue.component('shell-container', {\r\n        template: '#shell-container',\r\n        props: {\r\n            globals: Object,\r\n            settings: Object,\r\n            page: Object,\r\n        },\r\n    });\r\n\r\n})(jQuery, Vue, Core, Shell);\r\n","(function($, Vue, Core, Shell) {\r\n\r\n    Vue.component('shell-domains', {\r\n        template: '#shell-domains',\r\n        props: {\r\n            domains: Array,\r\n            globals: Object,\r\n        },\r\n    });\r\n\r\n})(jQuery, Vue, Core, Shell);\r\n","(function($, Vue, Core, Shell) {\r\n\r\n    var runtime = Vue.service('runtime', {\r\n\r\n        evaluate: function(self, b, v) {\r\n\r\n            if (b && b.expression) {\r\n\r\n                try {\r\n                    if (b.strategy == 'eval') {\r\n                        var value = self.$eval(b.expression);\r\n                        return value;\r\n                    } else if (b.strategy == 'wire') {\r\n                        var value = self.$get(b.expression);\r\n                        return value;\r\n                    } else {\r\n                        return self.$interpolate(b.expression);\r\n                    }\r\n                } catch (e) {\r\n                    console.log('Cannot evaluate expression', b.expression);\r\n                    return v;\r\n                }\r\n            }\r\n\r\n            return v;\r\n        },\r\n\r\n        evaluateParams: function(self, props, params) {\r\n\r\n            var items = [];\r\n            for (var i = 0; i < props.length; i++) {\r\n                var prop = props[i];\r\n                var param = params && params[prop.name];\r\n                items.push({\r\n                    prop: prop,\r\n                    param: param,\r\n                });\r\n            }\r\n\r\n            var value = {};\r\n            for (var i = 0; i < items.length; i++) {\r\n\r\n                var item = items[i];\r\n\r\n                var n = item.prop.name;\r\n                var r = item.prop.variable;\r\n\r\n                var b = item.param ? item.param.binding : null;\r\n                var v = item.param ? item.param.value : null;\r\n\r\n                if (item.prop.type == 'object') {\r\n\r\n                    var vv;\r\n\r\n                    if (b && b.expression) {\r\n\r\n                        value[n] = vv;\r\n\r\n                    } else {\r\n\r\n                        var res = this.evaluateParams(self, item.prop.props, v);\r\n                        vv = r ? { value: res } : res;\r\n                        value[n] = vv;\r\n                    }\r\n\r\n                } else if (item.prop.type == 'multiple') {\r\n\r\n                    if (b && b.expression) {\r\n\r\n                        var vv = null;\r\n\r\n                        var array = [];\r\n                        var result = runtime.evaluate(self, b, v);\r\n\r\n                        if (r) {\r\n                            vv = result;\r\n                        } else {\r\n\r\n                            if ($.isArray(result)) {\r\n\r\n                                for (var j = 0; j < result.length; j++) {\r\n\r\n                                    var vm = new Vue({\r\n                                        data: Object.assign(JSON.parse(JSON.stringify(self.$data)), {\r\n                                            item: {\r\n                                                index: j,\r\n                                                value: result[j],\r\n                                            }\r\n                                        })\r\n                                    });\r\n\r\n                                    array.push(this.evaluateParams(vm, item.prop.props, b.params));\r\n                                }\r\n\r\n                                vv = array;\r\n                            }\r\n                        }\r\n\r\n                    } else {\r\n\r\n                        var array = [];\r\n\r\n                        var index = 0;\r\n                        for(var j = 0; j < v.length; j++) {\r\n                            var vi = v[j];\r\n                            if (vi._action != 'remove') {\r\n                                array[index++] = this.evaluateParams(self, item.prop.props, vi);\r\n                            }\r\n                        }\r\n\r\n                        vv = r ? { value: array } : array;\r\n                    }\r\n\r\n                    value[n] = vv;\r\n\r\n                } else {\r\n\r\n                    var vv = runtime.evaluate(self, b, v);\r\n                    value[n] = vv || '';\r\n                }\r\n            }\r\n\r\n            return value;\r\n        }\r\n    });\r\n\r\n    var DecoratorMixin = {\r\n\r\n        props: {\r\n            items: Array,\r\n        },\r\n\r\n        methods: {\r\n\r\n            removeWidget: function() {\r\n                this.$dispatch('removeChildWidget', { item: this.model });\r\n            },\r\n\r\n            doApply: function(model) {\r\n\r\n                Object.assign(this.model, JSON.parse(JSON.stringify(model)), {\r\n                    _action: this.model._action\r\n                        ? this.model._action\r\n                        : 'update'\r\n                });\r\n\r\n                $(window).trigger('resize');\r\n            },\r\n\r\n            showSettings: function() {\r\n\r\n                var dialog = new Shell.Widgets.ModalEditor({\r\n\r\n                    data: {\r\n                        globals: this.globals,\r\n                        owner: this,\r\n                        context: {\r\n                            widget: this.widget\r\n                        },\r\n                        original: this.model,\r\n                        current: JSON.parse(JSON.stringify(this.model))\r\n                    },\r\n\r\n                    methods: {\r\n                        submit: function() {\r\n                            this.owner.doApply(this.current);\r\n                            this.$remove();\r\n                            this.$destroy();\r\n                        },\r\n                        reset: function() {\r\n                            this.$remove();\r\n                            this.$destroy();\r\n                        }\r\n                    }\r\n                }).$mount().$appendTo($('body').get(0));\r\n            },\r\n        },\r\n    };\r\n\r\n    var BindingsMixin = {\r\n\r\n        data: function() {\r\n            return {\r\n                bindings: this.bindings,\r\n            };\r\n        },\r\n\r\n        created: function() {\r\n\r\n            this.$watch('data', (data) => {\r\n                var bindings = runtime.evaluateParams(this, this.widget.props, this.model.params);\r\n                this.$set('bindings', bindings);\r\n            }, {\r\n                deep: true,\r\n                immediate: true,\r\n            });\r\n\r\n            this.$watch('storage', (storage) => {\r\n                var bindings = runtime.evaluateParams(this, this.widget.props, this.model.params);\r\n                this.$set('bindings', bindings);\r\n            }, {\r\n                deep: true,\r\n                immediate: true,\r\n            });\r\n\r\n            this.$watch('model', (model) => {\r\n                var bindings = runtime.evaluateParams(this, this.widget.props, model.params)\r\n                this.$set('bindings', bindings);\r\n            }, {\r\n                deep: true,\r\n                immediate: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    var CompositeMixin = {\r\n\r\n        data: function() {\r\n            return {\r\n                children: this.children,\r\n            };\r\n        },\r\n\r\n        created: function() {\r\n\r\n            this.$watch('items', (items) => {\r\n\r\n                var children = [];\r\n                if (items) {\r\n                    for (var i = 0; i < items.length; i++) {\r\n                        var item = items[i];\r\n                        if (item._action != 'remove') {\r\n                            children.push(item);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (children.length < 1) {\r\n                    children.push(JSON.parse(JSON.stringify(this.placeholder())));\r\n                }\r\n\r\n                this.children = children;\r\n            }, {\r\n                immediate: true,\r\n                deep: true,\r\n            });\r\n        },\r\n\r\n        events: {\r\n\r\n            removeChildWidget: function(data) {\r\n\r\n                var item = data.item;\r\n\r\n                if (item._action == 'create') {\r\n                    this.items.$remove(item);\r\n                } else {\r\n                    item._action = 'remove';\r\n                }\r\n\r\n                this.items = this.items.slice();\r\n            },\r\n        },\r\n\r\n        methods: {\r\n\r\n            // find: function(children, item) {\r\n            //\r\n            //     var index = 0;\r\n            //     for (var i = 0; i < children.length && index < domIndex; i++) {\r\n            //\r\n            //         var child = children[i];\r\n            //\r\n            //         if (child._action != 'remove') {\r\n            //             index++;\r\n            //         }\r\n            //     }\r\n            //\r\n            //     return index;\r\n            // }\r\n        },\r\n    };\r\n\r\n    var SortableMixin = function (selector) {\r\n\r\n        return {\r\n\r\n            data: function() {\r\n\r\n                return {\r\n                    selected: this.selected,\r\n                };\r\n            },\r\n\r\n            attached: function() {\r\n\r\n                if (this.$route.private) {\r\n\r\n                    var shell = Vue.service('shell');\r\n\r\n                    // this.$watch('selected', function(selected) {\r\n                    //\r\n                    //     if (this.sortable) {\r\n                    //         if (selected) {\r\n                    //             this.sortable.sortable(\"disable\");\r\n                    //         } else {\r\n                    //             this.sortable.sortable(\"enable\");\r\n                    //         }\r\n                    //     }\r\n                    // });\r\n                }\r\n            },\r\n\r\n            methods: {\r\n                selectTarget: function() {\r\n                    this.selected = true;\r\n                },\r\n\r\n                unselectTarget: function() {\r\n                    this.selected = false;\r\n                },\r\n            }\r\n        };\r\n    };\r\n\r\n    Vue.component('shell-decorator-stub', {\r\n        template: '#shell-decorator-stub',\r\n        mixins: [ DecoratorMixin, BindingsMixin ],\r\n        props: {\r\n            globals: Object,\r\n            settings: Object,\r\n            stack: Object,\r\n            page: Object,\r\n            data: Object,\r\n            storage: Object,\r\n            model: Object,\r\n            widget: Object,\r\n            editable: Boolean,\r\n            items: Array,\r\n        },\r\n    });\r\n\r\n    Vue.component('shell-decorator-widget', {\r\n        template: '#shell-decorator-widget',\r\n        mixins: [ DecoratorMixin, BindingsMixin ],\r\n        props: {\r\n            globals: Object,\r\n            settings: Object,\r\n            stack: Object,\r\n            page: Object,\r\n            data: Object,\r\n            storage: Object,\r\n            model: Object,\r\n            widget: Object,\r\n            editable: Boolean,\r\n            items: Array,\r\n        },\r\n    });\r\n\r\n    Vue.component('shell-decorator-horizontal', {\r\n        template: '#shell-decorator-horizontal',\r\n        mixins: [ DecoratorMixin, CompositeMixin, SortableMixin('>.ge.ge-content >.wg.wg-default-stack >.wg.wg-content >.wg.wg-table >.wg.wg-row'), BindingsMixin ],\r\n        props: {\r\n            globals: Object,\r\n            settings: Object,\r\n            stack: Object,\r\n            page: Object,\r\n            data: Object,\r\n            storage: Object,\r\n            model: Object,\r\n            widget: Object,\r\n            editable: Boolean,\r\n            items: Array,\r\n        },\r\n        methods: {\r\n            placeholder: function() {\r\n                return Vue.service('palette').placeholder(`\r\n                    <small>Horizontal Stack</small>\r\n                    <div>Drop Here</div>\r\n                `);\r\n            }\r\n        },\r\n    });\r\n\r\n    Vue.component('shell-decorator-vertical', {\r\n        template: '#shell-decorator-vertical',\r\n        mixins: [ DecoratorMixin, CompositeMixin, SortableMixin('>.ge.ge-content >.wg.wg-default-stack >.wg.wg-content >.wg.wg-table'), BindingsMixin ],\r\n        props: {\r\n            globals: Object,\r\n            settings: Object,\r\n            stack: Object,\r\n            page: Object,\r\n            data: Object,\r\n            storage: Object,\r\n            model: Object,\r\n            widget: Object,\r\n            editable: Boolean,\r\n            items: Array,\r\n        },\r\n        methods: {\r\n            placeholder: function() {\r\n                return Vue.service('palette').placeholder(`\r\n                    <small>Vertical Stack</small>\r\n                    <div>Drop Here</div>\r\n                `);\r\n            }\r\n        },\r\n    });\r\n\r\n    Vue.component('shell-decorator-canvas', {\r\n        template: '#shell-decorator-canvas',\r\n        mixins: [ CompositeMixin, SortableMixin('>.ge.ge-content >.wg.wg-default-stack >.wg.wg-content >.wg.wg-table'), BindingsMixin ],\r\n        props: {\r\n            globals: Object,\r\n            settings: Object,\r\n            stack: Object,\r\n            page: Object,\r\n            data: Object,\r\n            storage: Object,\r\n            model: Object,\r\n            widget: Object,\r\n            editable: Boolean,\r\n            items: Array,\r\n        },\r\n        created: function() {\r\n            this.selected = true;\r\n        },\r\n        attached: function() {\r\n\r\n            var dragged;\r\n\r\n            this.sortable = $(this.$el).sortable({\r\n\r\n                vertical: true,\r\n                drop: true,\r\n\r\n                containerSelector: '.wg.wg-sortable-container.wg-sortable-editable',\r\n                itemSelector: '.wg.wg-sortable-item.wg-sortable-editable',\r\n                excludeSelector: '.ge.ge-overlay',\r\n\r\n                verticalClass: \"wg-sortable-vertical\",\r\n                horizontalClass: \"wg-sortable-horizontal\",\r\n                placeholder: `\r\n                    <div class=\"wg wg-sortable-placeholder\">\r\n                        <div class=\"wg wg-placeholder-container\">\r\n                            <div class=\"wg wg-placeholder-inner\"></div>\r\n                        </div>\r\n                    </div>\r\n                `,\r\n                onDragStart: function(context, event, _super) {\r\n\r\n                    _super(context, event);\r\n\r\n                    var stack = $(context.$container).closest('.ge.ge-widget').get(0).__vue__;\r\n                    var vue = context.$originalItem.find('.ge.ge-widget:first').get(0).__vue__;\r\n\r\n                    dragged = {\r\n                        stack: stack,\r\n                        // index: stack.find(stack.items, context.$originalItem.index()),\r\n                        index: stack.items.indexOf(vue.model),\r\n                        vue: vue,\r\n                    };\r\n                },\r\n                onDrop: function(context, event, _super) {\r\n\r\n                    _super(context, event);\r\n\r\n                    var vue = context.location.$item.find('.ge.ge-widget:first').get(0).__vue__\r\n\r\n                    var newStack = context.location.$container.closest('.ge.ge-widget').get(0).__vue__;\r\n\r\n                    var newIndex = newStack.items.indexOf(vue.model) + (context.location.before ? 0 : 1);\r\n\r\n                    var w = context.$item.data('widget');\r\n\r\n                    if (w) {\r\n\r\n                        var newItem = Vue.service('palette').item(w);\r\n                        newStack.items.splice(newIndex, 0, newItem);\r\n\r\n                    } else if (dragged) {\r\n\r\n                        var oldStack = dragged.stack;\r\n                        var oldIndex = dragged.index;\r\n                        var oldItem = dragged.vue.model;\r\n\r\n                        var newItem = Object.assign(JSON.parse(JSON.stringify(dragged.vue.model)));\r\n\r\n                        if (oldStack != newStack) {\r\n\r\n                            delete newItem.id;\r\n                            newItem._action = 'create';\r\n\r\n                            if (oldItem._action == 'create') {\r\n                                oldStack.items.splice(oldIndex, 1);\r\n                            } else {\r\n                                oldItem._action = 'remove';\r\n                            }\r\n\r\n                            newStack.items.splice(newIndex, 0, newItem);\r\n\r\n                        } else if (newIndex != oldIndex && newIndex != oldIndex + 1) {\r\n\r\n                            newItem._action = oldItem._action == 'create'\r\n                                ? 'create'\r\n                                : 'update'\r\n                            ;\r\n\r\n                            if (newIndex < oldIndex) {\r\n\r\n                                oldStack.items.splice(oldIndex, 1);\r\n                                newStack.items.splice(newIndex, 0, newItem);\r\n\r\n                            } else if (newIndex > oldIndex) {\r\n\r\n                                newStack.items.splice(newIndex, 0, newItem);\r\n                                oldStack.items.splice(oldIndex, 1);\r\n                            }\r\n                        }\r\n\r\n                        oldStack.items = oldStack.items.slice();\r\n                        newStack.items = newStack.items.slice();\r\n                    }\r\n\r\n                    context.$item.remove();\r\n                }\r\n            });\r\n        },\r\n        methods: {\r\n            placeholder: function() {\r\n                return Vue.service('palette').placeholder(`\r\n                    <small>Vertical Stack</small>\r\n                    <div>Drop Here</div>\r\n                `);\r\n            }\r\n        },\r\n    });\r\n\r\n})(jQuery, Vue, Core, Shell);\r\n","(function($, Vue, Core, Shell) {\r\n\r\n    Vue.component('shell-categories', {\r\n        template: '#shell-categories',\r\n        props: {\r\n            categories: Array,\r\n            globals: Object,\r\n        },\r\n        methods: {\r\n            trigger: function(event, item, context) {\r\n                this.$dispatch(event, { item: item, context: context });\r\n            },\r\n        }\r\n    });\r\n\r\n})(jQuery, Vue, Core, Shell);\r\n","(function($, Vue, Core, Shell) {\r\n\r\n    Shell.Loader =\r\n    Vue.component('shell-loader', {\r\n        template: '#shell-loader',\r\n        data: function() {\r\n            return {\r\n                portal: null,\r\n                settings: null,\r\n            }\r\n        },\r\n        created: function() {\r\n            Vue.service('portals').get({ id: this.$route.params.portal }).then(\r\n                (d) => {\r\n                    this.$set('portal', d.data.portal);\r\n                    this.$set('settings', d.data.settings);\r\n                },\r\n                (e) => {\r\n                    console.log(e);\r\n                }\r\n            );\r\n        }\r\n    });\r\n\r\n})(jQuery, Vue, Core, Shell);\r\n","(function($, Vue, Core, Shell) {\r\n\r\n    Vue.component('shell-page', {\r\n        template: '#shell-page',\r\n        mixins: [ /*Core.ContainerMixin, Core.SortableMixin*/ ],\r\n        props: {\r\n            globals: Object,\r\n            settings: Object,\r\n            page: Object,\r\n        },\r\n        data: function() {\r\n            return {\r\n                decorator: this.decorator,\r\n                data: this.data,\r\n                storage: this.storage,\r\n                widget: this.widget,\r\n            };\r\n        },\r\n        created: function() {\r\n\r\n            this.widget = Vue.service('palette').widget('default-container/default-container-stack/default-stack-canvas');\r\n\r\n            var runtime = Vue.service('runtime');\r\n\r\n            this.decorator = 'shell-decorator-canvas';\r\n            this.data = {};\r\n            this.storage = {};\r\n\r\n            this.$watch('page.storages', (storages) => {\r\n\r\n                if (storages) {\r\n\r\n                    var storage = {};\r\n\r\n                    for (var i = 0; i < storages.length; i++) {\r\n\r\n                        var st = storages[i];\r\n                        storage[st.name] = {};\r\n\r\n                        for (var j = 0; j < st.variables.length; j++) {\r\n\r\n                            var variable = st.variables[j];\r\n                            storage[st.name][variable.name] = {\r\n                                value: runtime.evaluate(this, variable.binding, variable.value) || null\r\n                            };\r\n                        }\r\n                    }\r\n\r\n                    this.$set('storage', storage);\r\n                }\r\n            }, {\r\n                immediate: true,\r\n                deep: true,\r\n            });\r\n\r\n            this.$watch('page.sources', (sources) => {\r\n\r\n                if (sources) {\r\n\r\n                    var deferred = [];\r\n                    for (var i = 0; i < sources.length; i++) {\r\n                        deferred.push(this.doRequest(sources[i]));\r\n                    }\r\n\r\n                    if (deferred.length > 1) {\r\n\r\n                        $.when.apply(this, deferred).done(function() {\r\n                            var data = {};\r\n                            for (var i = 0; i < arguments.length; i++) {\r\n                                data[sources[i].name] = arguments[i][0];\r\n                            }\r\n                            this.$set('data', data);\r\n                        }.bind(this));\r\n\r\n                    } else if (deferred.length == 1) {\r\n\r\n                        deferred[0].done(function(d) {\r\n                            var data = {};\r\n                            data[sources[0].name] = d;\r\n                            this.$set('data', data);\r\n                        }.bind(this));\r\n                    }\r\n                }\r\n\r\n            }, {\r\n                immediate: true,\r\n                deep: true,\r\n            });\r\n        },\r\n        methods: {\r\n            doRequest: function(s) {\r\n                var query = {};\r\n                for (var i = 0; i < s.params.length; i++) {\r\n                    var param = s.params[i];\r\n                    if (param.in == 'query' && param.specified) {\r\n\r\n                        var value = param.binding\r\n                                ? this.$interpolate(param.binding) // TODO Interpolate in page context\r\n                                : param.value\r\n                            ;\r\n\r\n                        query[param.name] = value;\r\n                    }\r\n                }\r\n\r\n                return $.ajax({\r\n                    method: s.method,\r\n                    url: s.url,\r\n                    dataType: \"json\",\r\n                    data: query,\r\n                });\r\n            }\r\n        },\r\n    });\r\n\r\n})(jQuery, Vue, Core, Shell);\r\n","(function($, Vue, Core, Shell) {\r\n\r\n    var PaletteItem =\r\n    Vue.component('shell-palette-item', {\r\n        template: '#shell-palette-item',\r\n        props: {\r\n            category: Object,\r\n            group: Object,\r\n            item: Object,\r\n            globals: Object,\r\n        },\r\n    });\r\n\r\n    Vue.component('shell-palette', {\r\n        template: '#shell-palette',\r\n        props: {\r\n            globals: Object,\r\n            category: Object,\r\n        },\r\n        data: function() {\r\n            return {\r\n                categories: this.categories\r\n            };\r\n        },\r\n        components: {\r\n            'palette-item': PaletteItem\r\n        },\r\n        created: function() {\r\n            this.categories = Widgets.Palette.categories();\r\n        },\r\n        attached: function() {\r\n\r\n            this.sortable = $(this.$el).sortable({\r\n                group: 'widgets',\r\n                containerSelector: '.wg-sortable-container',\r\n                itemSelector: '.wg-sortable-item',\r\n                drop: false,\r\n            });\r\n        },\r\n        methods: {\r\n            trigger: function(event, item, context) {\r\n                this.$dispatch(event, { item: item, context: context });\r\n            },\r\n        },\r\n    });\r\n\r\n})(jQuery, Vue, Core, Shell);\r\n","(function($, Vue, Core, Shell) {\r\n\r\n    Vue.component('shell-pages', {\r\n        template: '#shell-pages',\r\n        props: {\r\n            pages: Array,\r\n            globals: Object,\r\n        },\r\n        data: function() {\r\n            return {\r\n                items: this.items,\r\n            }\r\n        },\r\n        created: function() {\r\n\r\n            this.$watch('pages', (pages) => {\r\n\r\n                var items = [];\r\n                for (var i = 0; i < this.pages.length; i++) {\r\n                    var page = this.pages[i];\r\n                    if (page._action != 'remove') {\r\n                        items.push(page);\r\n                    }\r\n                }\r\n                this.items = items;\r\n                \r\n            }, { deep: true, immediate: true })\r\n        },\r\n        methods: {\r\n\r\n            remove: function(page) {\r\n\r\n                var index = this.pages.indexOf(page);\r\n                if (index !== -1) {\r\n                    var item = this.pages[index];\r\n                    if (item._action == 'create') {\r\n                        this.pages.$remove(item);\r\n                    } else {\r\n                        item._action = 'remove';\r\n                    }\r\n                }\r\n\r\n                this.pages = this.pages.slice();\r\n                // console.log(this.pages);\r\n            },\r\n\r\n            create: function() {\r\n\r\n                var root = Vue.service('palette').item('default-container/default-container-stack/stack-canvas');\r\n                var widget = Vue.service('palette').widget('default-container/default-container-stack/default-stack-canvas');\r\n\r\n                var page = {\r\n                    _action: 'create',\r\n                    root: root,\r\n                    sources: [],\r\n                    storages: [],\r\n                };\r\n\r\n                var dialog = new Shell.Pages.ModalEditor({\r\n\r\n                    data: {\r\n                        globals: this.globals,\r\n                        owner: this,\r\n                        context: {\r\n                            widget: widget,\r\n                        },\r\n                        original: page,\r\n                        current: JSON.parse(JSON.stringify(page)),\r\n                    },\r\n\r\n                    methods: {\r\n                        submit: function() {\r\n\r\n                            Object.assign(this.original, JSON.parse(JSON.stringify(this.current)));\r\n                            this.original._action = this.original._action ? this.original._action : 'create';\r\n                            this.original.root._action = this.original.root._action ? this.original.root._action : 'create';\r\n\r\n                            this.owner.pages.push(this.original);\r\n\r\n                            this.$remove();\r\n                            this.$destroy();\r\n                        },\r\n                        reset: function() {\r\n                            this.$remove();\r\n                            this.$destroy();\r\n                        }\r\n                    }\r\n                }).$mount().$appendTo($('body').get(0));\r\n            },\r\n            update: function(page) {\r\n\r\n                var widget = Vue.service('palette').widget('default-container/default-container-stack/default-stack-canvas');\r\n\r\n                var dialog = new Shell.Pages.ModalEditor({\r\n\r\n                    data: {\r\n                        globals: this.globals,\r\n                        owner: this,\r\n                        context: {\r\n                            widget: widget,\r\n                        },\r\n                        original: page,\r\n                        current: JSON.parse(JSON.stringify(page))\r\n                    },\r\n\r\n                    methods: {\r\n                        submit: function() {\r\n\r\n                            Object.assign(this.original, JSON.parse(JSON.stringify(this.current)));\r\n                            this.original._action = this.original._action ? this.original._action : 'update';\r\n                            this.original.root._action = this.original.root._action ? this.original.root._action : 'update';\r\n\r\n                            this.owner.pages = this.owner.pages.slice();\r\n\r\n                            this.$remove();\r\n                            this.$destroy();\r\n                        },\r\n                        reset: function() {\r\n                            this.$remove();\r\n                            this.$destroy();\r\n                        }\r\n                    }\r\n                }).$mount().$appendTo($('body').get(0));\r\n            },\r\n            trigger: function(event, item, context) {\r\n                this.$dispatch(event, { item: item, context: context });\r\n            },\r\n        }\r\n    });\r\n\r\n})(jQuery, Vue, Core, Shell);\r\n","(function($, Vue, Core, Shell) {\r\n\r\n    Shell.Shell = {\r\n        props: {\r\n            settings: Object,\r\n            model: Object,\r\n        },\r\n        data: function() {\r\n            return {\r\n                globals: this.globals,\r\n            };\r\n        },\r\n        created: function() {\r\n\r\n            this.globals = {\r\n                selection: {\r\n                    category: null,\r\n                    page: null,\r\n                    source: null,\r\n                    storage: null,\r\n                },\r\n                settings: this.settings,\r\n                model: this.model,\r\n            };\r\n        },\r\n    };\r\n\r\n    Shell.ShellPublic =\r\n    Vue.component('shell-public', {\r\n        mixins: [ Shell.Shell ],\r\n        template: '#shell-public',\r\n    });\r\n\r\n    Shell.ShellPrivate =\r\n    Vue.component('shell-private', {\r\n\r\n        mixins: [ Shell.Shell ],\r\n        template: '#shell-private',\r\n\r\n        created: function() {\r\n\r\n            this.scale = 1;\r\n\r\n            function relevant(current, collection) {\r\n\r\n                if (!current || current._action == 'remove' || (collection && collection.indexOf(current) < 0)) {\r\n\r\n                    if (collection) {\r\n                        for (var i = 0; i < collection.length; i++) {\r\n                            var c = collection[i];\r\n                            if (c._action != 'remove') {\r\n                                return c;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return null;\r\n                }\r\n\r\n                if (current && current._action == 'remove') {\r\n                    return null;\r\n                }\r\n\r\n                return current;\r\n            }\r\n\r\n            this.globals.selection.category = Vue.service('palette').categories()[0];\r\n\r\n            this.$watch('model.domains', (domains) => {\r\n                this.globals.selection.domain = relevant(this.globals.selection.domain, domains);\r\n            }, {\r\n                immediate: true,\r\n            });\r\n\r\n            this.$watch('model.pages', (pages) => {\r\n                this.globals.selection.page = relevant(this.globals.selection.page, pages);\r\n            }, {\r\n                immediate: true,\r\n            });\r\n\r\n            this.$watch('globals.selection.page.sources', (sources) => {\r\n                this.globals.selection.source = relevant(this.globals.selection.source, sources);\r\n            }, {\r\n                immediate: true,\r\n            });\r\n\r\n            this.$watch('globals.selection.page.storages', (storages) => {\r\n                this.globals.selection.storage = relevant(this.globals.selection.storage, storages);\r\n            }, {\r\n                immediate: true,\r\n            });\r\n\r\n        },\r\n        events: {\r\n            zoomIn: function(data) {\r\n                this.scale += 0.1;\r\n                $('.ge.ge-page', this.$el).css('transform', 'scale(' + this.scale + ')');\r\n                $('.ge.ge-container', this.$el).perfectScrollbar('update');\r\n            },\r\n            zoomOut: function(data) {\r\n                this.scale -= 0.1;\r\n                $('.ge.ge-page', this.$el).css('transform', 'scale(' + this.scale + ')');\r\n                $('.ge.ge-container', this.$el).perfectScrollbar('update');\r\n            },\r\n            pull: function(data) {\r\n                $.ajax({\r\n                    url: `/ws/portals/${this.model.id}`,\r\n                    method: 'GET',\r\n                    dataType: \"json\"\r\n                })\r\n                .done((d) => {\r\n\r\n                        console.log(d);\r\n                    this.$set('model', d.portal);\r\n                })\r\n            },\r\n            push: function(data) {\r\n                $.ajax({\r\n                    url: `/ws/portals/${this.model.id}`,\r\n                    method: 'PUT',\r\n                    dataType: \"json\",\r\n                    data: JSON.stringify(this.model),\r\n                    contentType: \"application/json\",\r\n                })\r\n                .done((d) => {\r\n                    console.log(d);\r\n                    this.$set('model', d.portal);\r\n                })\r\n            },\r\n            selectCategory: function(data) {\r\n                this.globals.selection.category = data.item;\r\n            },\r\n            selectDomain: function(data) {\r\n                this.globals.selection.domain = data.item;\r\n            },\r\n            selectPage: function(data) {\r\n                this.globals.selection.page = data.item;\r\n            },\r\n            selectSource: function(data) {\r\n                this.globals.selection.source = data.item;\r\n            },\r\n            selectStorage: function(data) {\r\n                this.globals.selection.storage = data.item;\r\n            },\r\n        }\r\n    });\r\n\r\n})(jQuery, Vue, Core, Shell);\r\n","(function($, Vue, Core, Shell) {\r\n\r\n    Vue.component('shell-target', {\r\n        template: '#shell-target',\r\n        props: {\r\n        },\r\n    });\r\n\r\n})(jQuery, Vue, Core, Shell);\r\n","(function($, Vue, Core, Shell) {\r\n\r\n    Vue.component('shell-sources', {\r\n        template: '#shell-sources',\r\n        props: {\r\n            sources: Array,\r\n            globals: Object,\r\n        },\r\n    });\r\n\r\n})(jQuery, Vue, Core, Shell);\r\n","(function($, Vue, Core, Shell) {\r\n\r\n    Shell.Widget =\r\n    Vue.component('shell-widget', {\r\n        template: '#shell-widget',\r\n        mixins: [ /* Core.DecoratorMixin, Core.ContainerMixin, Core.SortableMixin, Core.BindingsMixin */ ],\r\n        props: {\r\n            globals: Object,\r\n            settings: Object,\r\n            page: Object,\r\n            stack: Object,\r\n            model: Object,\r\n            data: Object,\r\n            storage: Object,\r\n            editable: Boolean,\r\n        },\r\n        init: function() {\r\n            this.decorators = {\r\n                alternatives: {\r\n                    'default-stack-horizontal': 'shell-decorator-horizontal',\r\n                    'default-stack-vertical': 'shell-decorator-vertical',\r\n                    'default-stub': 'shell-decorator-stub',\r\n                },\r\n                fallback: 'shell-decorator-widget',\r\n            };\r\n        },\r\n        created: function() {\r\n\r\n            var palette = Vue.service('palette');\r\n            this.widget = palette.widget(this.model.name);\r\n            this.decorator = this.decorators.alternatives[this.widget.tag] || this.decorators.fallback;\r\n        },\r\n        data: function() {\r\n\r\n            return {\r\n                widget: this.widget,\r\n                decorator: this.decorator,\r\n            };\r\n        },\r\n    });\r\n\r\n})(jQuery, Vue, Core, Shell);\r\n","(function($, Vue, Core, Shell) {\r\n\r\n    Vue.component('shell-storages', {\r\n        template: '#shell-storages',\r\n        props: {\r\n            storages: Array,\r\n            globals: Object,\r\n        },\r\n    });\r\n\r\n})(jQuery, Vue, Core, Shell);\r\n","(function(Vue, $, Core, Shell) {\r\n\r\n    var SourcesListViewer =\r\n    Vue.component('pages-sources-list', {\r\n        template: '#pages-sources-list',\r\n        mixins: [Core.ListViewerMixin],\r\n    });\r\n\r\n    var SourcesModalEditor =\r\n    Vue.component('pages-sources-dialog', {\r\n        template: '#pages-sources-dialog',\r\n        mixins: [Core.ModalEditorMixin],\r\n        methods: {\r\n            check: function() {\r\n                console.log('check');\r\n            }\r\n        }\r\n    });\r\n\r\n    var SourcesEditor =\r\n    Vue.component('pages-sources', {\r\n        mixins: [Core.EditorMixin(SourcesListViewer, SourcesModalEditor)],\r\n        template: '#pages-sources',\r\n    });\r\n\r\n    var SourcesParamsListViewer =\r\n    Vue.component('pages-sources-params-list', {\r\n        template: '#pages-sources-params-list',\r\n        mixins: [Core.ListViewerMixin],\r\n    });\r\n\r\n    var SourcesParamsModalEditor =\r\n    Vue.component('pages-sources-params-dialog', {\r\n        template: '#pages-sources-params-dialog',\r\n        mixins: [Core.ModalEditorMixin],\r\n    });\r\n\r\n    var SourcesParamsEditor =\r\n    Vue.component('pages-sources-params', {\r\n        mixins: [Core.EditorMixin(SourcesParamsListViewer, SourcesParamsModalEditor)],\r\n        template: '#pages-sources-params',\r\n    });\r\n\r\n})(Vue, jQuery, Core, Shell);\r\n","(function(Vue, $, Core, Shell) {\r\n\r\n    var WidgetsModalEditor = Shell.Widgets.ModalEditor =\r\n    Vue.component('shell-widgets-dialog', {\r\n        template: '#shell-widgets-dialog',\r\n        mixins: [Core.ModalEditorMixin, Core.TabsMixin('data')],\r\n        created: function() {\r\n\r\n            var items = [];\r\n\r\n            for (var i = 0; i < this.context.widget.props.length; i++) {\r\n\r\n                var prop = this.context.widget.props[i];\r\n                var param = this.current.params[prop.name];\r\n\r\n                var item = {\r\n                    prop: prop,\r\n                    param: param,\r\n                };\r\n\r\n                items.push(item);\r\n            }\r\n\r\n            this.items = items;\r\n        },\r\n        data: function() {\r\n            return {\r\n                context: this.context,\r\n                items: this.items,\r\n            };\r\n        },\r\n        methods: {\r\n\r\n            hasProps: function(tab) {\r\n                if (this.context.widget && this.context.widget.props) {\r\n                    for (var i = 0; i < this.context.widget.props.length; i++) {\r\n                        var prop = this.context.widget.props[i];\r\n                        if (prop.tab == tab) return true;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        }\r\n    });\r\n\r\n})(Vue, jQuery, Core, Shell);\r\n"],"sourceRoot":"/source/"}